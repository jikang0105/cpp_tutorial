#include <iostream>

using namespace std;

int main() {

	/*
	진수 : 2진수, 8진수, 10진수, 16진수
	2진수 : 0 ~ 1
	8진수 : 0 ~ 7
	10진수 : 0 ~ 9
	16진수 : 0 ~ 15 : 0 ~ 9 10 ~ 15 : a ~ f
	진수들은 서로 다른 진수로 변환이 가능하다.

	87을 2진수, 16진수로 변환해보자.

	먼저 2진수로 변환한다.
	87 / 2 = 43 -- 1
	43 / 2 = 21 -- 1
	21 / 2 = 10 -- 1
	10 / 2 = 5 --- 0
	5 / 2 = 2 ---- 1
	2 / 2 = 1 ---- 0

	가장 마지막에 나온 몫부터 역순으로 나머지값들을 읽는다.
	1010111 이 된다.

	16진수로 변환해보자. 10진수를 바로 16진수로 변환하는것 보다 2진수로 변호나한 후에
	16진수로 변환하는 것이 쉽다.

	1010111을 오른쪽부터 4자리씩 끊어서 계산한다. 16진수 1자리는 2진수 4자리 이다.
	0101 0111
	8421 8421

	2진수가 1인 부분의 값들을 더한다.
	4 + 1 = 5, 4 + 2 + 1 = 7
	16진수 57이 된다.

	53 / 2 = 26 - 1
	26 / 2 = 13 - 0
	13 / 2 = 6 -- 1
	6 / 2 = 3 --- 0
	3 / 2 = 1 --- 1

	비트단위 논리연산자 : 2진수 단위의 연산을 한다. 값 대 값을 연산하여 값으로 나온다.
	종류 : AND(&), OR(|), NOT(~(필드?)), XOR(^)
	AND, OR, NOT은 일반논리연산자와 같다.

	A   B   XOR
	0   0    0
	1   0    1
	0   1    1
	1   1    0

	서로 다를때만 참이 나온다.

	87 & 53 = 
	87 : 101 0111
	53 : 011 0101

	먼저 위처럼 2진수로 바꾼후에 2진수 각 자리별로 논리연산을 실행한다.

	  1010111
	& 0110101
	-----------
	  0010101

	  10진수로 변환하면

	  1 + 2^2 + 2^45 = 1 + 4 + 16 = 21
	*/

	cout << "87 & 53 = " << (87 & 53) << endl;
}